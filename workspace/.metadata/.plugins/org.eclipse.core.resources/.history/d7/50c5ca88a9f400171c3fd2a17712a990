package com.mule.encrypt;

import java.security.KeyPair;
import java.security.PrivateKey;
import java.util.Map;
import javax.crypto.Cipher;
import org.mule.api.MuleEventContext;
import org.mule.api.MuleMessage;
import org.mule.api.lifecycle.Callable;


public class EncryptData implements Callable{
	
	public Object onCall(MuleEventContext eventContext) throws Exception {
		MuleMessage message = eventContext.getMessage();
		Map<String, String> queryParams = message.getInboundProperty("http.query.params");
		String pass = queryParams.get("pass");

		KeyPair keyPair = GenerateKeyPair.buildKeyPair();
		PrivateKey privateKey = keyPair.getPrivate();
		
		byte[] encrypt = encrypt(privateKey, pass);
		String encryptedPass = new String(encrypt);
		return encryptedPass;

	}
	
	public static byte[] encrypt(PrivateKey privateKey, String message) throws Exception {
        Cipher cipher = Cipher.getInstance("RSA");  
        cipher.init(Cipher.ENCRYPT_MODE, privateKey);  
        
        return cipher.doFinal(message.getBytes());  
    }

}
